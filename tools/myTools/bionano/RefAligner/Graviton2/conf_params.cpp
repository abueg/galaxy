#include "conf_params.h"

//confidence score conversion data: bins must be same for insertions and deletions
int sv_conflen = 9; //these are the sizes _currently in use_
int sv_sizelen = 15;
int sv_ppvbin_conf[SVCONFLEN] = {0, 1, 2, 3, 4, 5, 6, 8, 10}; //rest is initialized to 0
int sv_ppvbin_sizekb[SVSIZELEN] = {0, 1, 2, 5, 10, 15, 20, 30, 50, 70, 100, 150, 200, 300, 500};
float sv_ppvbin_del[SVCONFLEN][SVSIZELEN] = {
  //0,     1,      2,      5,      10,     15,     20,     30,     50,     70,     100,    150,    200,    300,    500
  {0.5474, 0.9854, 0.9941, 0.9889, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.5474, 0.9854, 0.9941, 0.9889, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.8523, 0.9847, 0.9971, 0.9926, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.9000, 0.9840, 0.9970, 0.9925, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.8750, 0.9827, 0.9970, 0.9925, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.8696, 0.9936, 0.9969, 0.9923, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.9000, 0.9932, 0.9969, 0.9961, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.9000, 0.9911, 0.9968, 0.9961, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857},
  {0.9000, 0.9891, 0.9966, 0.9960, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9737, 1.0000, 0.9857}};

float sv_ppvbin_ins[SVCONFLEN][SVSIZELEN] = {
  //0,     1,      2,      5,      10,     15,     20,     30,     50,     70,     100,    150,    200,    300,    500
  {0.4152, 1.0000, 0.9932, 0.9961, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.4152, 1.0000, 0.9932, 0.9961, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.4397, 1.0000, 0.9966, 0.9960, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.5000, 1.0000, 1.0000, 0.9960, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.8000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.8182, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.8182, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9934, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.8182, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9932, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000},
  {0.8182, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9931, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9149, 1.0000}};

// inversion_small_type confidence is based on number of aligned labels in small MG 
const double inv_paired_vec[INV_PAIRED_LEN] = {0.00, 0.00, 0.90, 0.98, 0.99};/* for 0, 1, 2, 3, 4+ label intervals */

